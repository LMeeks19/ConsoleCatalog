// <auto-generated />
using System;
using ConsoleCatalog.Internal_Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleCatalog.Internal_Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241022013521_Add-Created-Date-To-SubObj")]
    partial class AddCreatedDateToSubObj
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Cookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AuthId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cookies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.AvatarUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PSNProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PSNProfileId");

                    b.ToTable("AvatarUrls");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefinedTrophiesId")
                        .HasColumnType("int");

                    b.Property<int>("DefinedTrophyGroupObjectId")
                        .HasColumnType("int");

                    b.Property<string>("TrophyGroupIconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DefinedTrophiesId");

                    b.HasIndex("DefinedTrophyGroupObjectId");

                    b.ToTable("DefinedTrophyGroups");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroupObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefinedTrophiesId")
                        .HasColumnType("int");

                    b.Property<string>("NpCommunicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitleIconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitlePlatform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DefinedTrophiesId");

                    b.ToTable("DefinedTrophyGroupObjects");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bronze")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Platinum")
                        .HasColumnType("int");

                    b.Property<int>("Silver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DefinedTrophyTypes");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTitleTrophy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Earned")
                        .HasColumnType("bit");

                    b.Property<string>("EarnedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PSNProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Progress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgressRate")
                        .HasColumnType("int");

                    b.Property<string>("ProgressedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyEarnedRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrophyId")
                        .HasColumnType("int");

                    b.Property<int>("TrophyRare")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EarnedTitleTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EarnedTrophiesId")
                        .HasColumnType("int");

                    b.Property<int>("EarnedTrophyGroupObjectId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("TrophyGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EarnedTrophiesId");

                    b.HasIndex("EarnedTrophyGroupObjectId");

                    b.ToTable("EarnedTrophyGroups");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroupObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EarnedTrophiesId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NpCommunicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PSNProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EarnedTrophiesId");

                    b.ToTable("EarnedTrophyGroupObjects");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bronze")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Platinum")
                        .HasColumnType("int");

                    b.Property<int>("Silver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EarnedTrophyTypes");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.PSNProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Blocking")
                        .HasColumnType("bit");

                    b.Property<bool>("Following")
                        .HasColumnType("bit");

                    b.Property<string>("FriendRelation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOfficiallyVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalDetailId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalDetailSharing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PersonalDetailSharingRequestMessageFlag")
                        .HasColumnType("bit");

                    b.Property<int>("Plus")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryOnlineStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestMessageFlag")
                        .HasColumnType("bit");

                    b.Property<int>("TrophySummaryId")
                        .HasColumnType("int");

                    b.Property<int>("TrophyTitlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalDetailId");

                    b.HasIndex("TrophySummaryId");

                    b.HasIndex("TrophyTitlesId");

                    b.ToTable("PSNProfiles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.PersonalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TitleTrophy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrophyHidden")
                        .HasColumnType("bit");

                    b.Property<string>("TrophyIconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrophyId")
                        .HasColumnType("int");

                    b.Property<string>("TrophyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyProgressTargetValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TitleTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophySummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EarnedTrophiesId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EarnedTrophiesId");

                    b.ToTable("TrophySummaries");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefinedTrophiesId")
                        .HasColumnType("int");

                    b.Property<int>("EarnedTrophiesId")
                        .HasColumnType("int");

                    b.Property<bool>("HasTrophyGroups")
                        .HasColumnType("bit");

                    b.Property<bool>("HiddenFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NpCommunicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NpServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("TrophyGroupCount")
                        .HasColumnType("int");

                    b.Property<string>("TrophySetVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitleDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitleIconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrophyTitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrophyTitleObjectId")
                        .HasColumnType("int");

                    b.Property<string>("TrophyTitlePlatform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DefinedTrophiesId");

                    b.HasIndex("EarnedTrophiesId");

                    b.HasIndex("TrophyTitleObjectId");

                    b.ToTable("TrophyTitles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitleObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalItemCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrophyTitleObjects");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.SubObjective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("TitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrophyId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SubObjectives");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaystationGamertag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XboxGamertag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentAchievements")
                        .HasColumnType("int");

                    b.Property<int>("CurrentGamerscore")
                        .HasColumnType("int");

                    b.Property<double>("ProgressPercentage")
                        .HasColumnType("float");

                    b.Property<int>("TotalAchievements")
                        .HasColumnType("int");

                    b.Property<int>("TotalGamerscore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("XBXAchievements");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountTier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FollowerCount")
                        .HasColumnType("int");

                    b.Property<int>("FollowingCount")
                        .HasColumnType("int");

                    b.Property<bool>("HasGamePass")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("XBXDetails");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DetailId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayPicRaw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamerScore")
                        .HasColumnType("int");

                    b.Property<string>("Gamertag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIdentiryShared")
                        .HasColumnType("bit");

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitlesCount")
                        .HasColumnType("int");

                    b.Property<string>("Xuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.ToTable("XBXProfiles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.Property<string>("Devices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBundle")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TitleHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("TitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("XBXProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AchievementId");

                    b.HasIndex("TitleHistoryId");

                    b.HasIndex("XBXProfileId");

                    b.ToTable("XBXTitles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXTitleHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastTimePlayed")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("XBXTitleHistories");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.AvatarUrl", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.PSNProfile", null)
                        .WithMany("AvatarUrls")
                        .HasForeignKey("PSNProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroup", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyTypes", "DefinedTrophies")
                        .WithMany()
                        .HasForeignKey("DefinedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroupObject", null)
                        .WithMany("TrophyGroups")
                        .HasForeignKey("DefinedTrophyGroupObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefinedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroupObject", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyTypes", "DefinedTrophies")
                        .WithMany()
                        .HasForeignKey("DefinedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefinedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroup", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyTypes", "EarnedTrophies")
                        .WithMany()
                        .HasForeignKey("EarnedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroupObject", null)
                        .WithMany("TrophyGroups")
                        .HasForeignKey("EarnedTrophyGroupObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EarnedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroupObject", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyTypes", "EarnedTrophies")
                        .WithMany()
                        .HasForeignKey("EarnedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EarnedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.PSNProfile", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.PersonalDetail", "PersonalDetail")
                        .WithMany()
                        .HasForeignKey("PersonalDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.TrophySummary", "TrophySummary")
                        .WithMany()
                        .HasForeignKey("TrophySummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitleObject", "TrophyTitles")
                        .WithMany()
                        .HasForeignKey("TrophyTitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalDetail");

                    b.Navigation("TrophySummary");

                    b.Navigation("TrophyTitles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophySummary", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyTypes", "EarnedTrophies")
                        .WithMany()
                        .HasForeignKey("EarnedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EarnedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitle", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyTypes", "DefinedTrophies")
                        .WithMany()
                        .HasForeignKey("DefinedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyTypes", "EarnedTrophies")
                        .WithMany()
                        .HasForeignKey("EarnedTrophiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitleObject", null)
                        .WithMany("TrophyTitles")
                        .HasForeignKey("TrophyTitleObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefinedTrophies");

                    b.Navigation("EarnedTrophies");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXProfile", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Xbox.XBXDetail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXTitle", b =>
                {
                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Xbox.XBXAchievement", "Achievement")
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Xbox.XBXTitleHistory", "TitleHistory")
                        .WithMany()
                        .HasForeignKey("TitleHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleCatalog.Internal_Server.Models.Xbox.XBXProfile", null)
                        .WithMany("Titles")
                        .HasForeignKey("XBXProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("TitleHistory");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.DefinedTrophyGroupObject", b =>
                {
                    b.Navigation("TrophyGroups");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.EarnedTrophyGroupObject", b =>
                {
                    b.Navigation("TrophyGroups");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.PSNProfile", b =>
                {
                    b.Navigation("AvatarUrls");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Playstation.TrophyTitleObject", b =>
                {
                    b.Navigation("TrophyTitles");
                });

            modelBuilder.Entity("ConsoleCatalog.Internal_Server.Models.Xbox.XBXProfile", b =>
                {
                    b.Navigation("Titles");
                });
#pragma warning restore 612, 618
        }
    }
}
